on:
  workflow_dispatch:
    inputs:
      runDevImage:
        description: 'Push dev image to ECR?'
        required: true
        default: 'false'
      runProdImage:
        description: 'Push prod image to ECR?'
        required: true
        default: 'false'
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  build-test:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          verbose: false
          arch: amd64

      - name: Prepare settings.xml
        run: |
          cp docker/ci/settings.xml.template ./settings.xml
          cat settings.xml

      - name: Clear project
        run: mvn clean

      - name: Compile the project
        run: mvn -s settings.xml compile

      - name: Amazon ECR Login
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Run build environment
        run: cd docker/ci && ./pull.sh && ./env.sh

      - name: Test containers
        run: docker ps

      - name: Run tests
        run: mvn test -Dspring.profiles.active=testci

      - name: Cleanup
        run: cd docker/ci && ./stop.sh

  push-dev-image-to-ecr:
    if: github.event.inputs.runDevImage == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Prepare settings.xml
        run: |
          cp docker/ci/settings.xml.template ./settings.xml
          cat settings.xml

      - name: Build image
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
            -t diploma-auth-service -f ./docker/ecs/Dockerfile .

      - name: Tag image
        run: docker tag diploma-auth-service:latest 533267200006.dkr.ecr.eu-central-1.amazonaws.com/diploma-auth-service:dev.latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Amazon ECR Login
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Push image
        run: docker push 533267200006.dkr.ecr.eu-central-1.amazonaws.com/diploma-auth-service:dev.latest

  push-prod-image-to-ecr:
    if: github.event.inputs.runProdImage == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Prepare settings.xml
        run: |
          cp docker/ci/settings.xml.template ./settings.xml
          cat settings.xml

      - name: Build image
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
            -t diploma-auth-service -f ./docker/ecs/Dockerfile .

      - name: Tag image
        run: docker tag diploma-auth-service:latest 533267200006.dkr.ecr.eu-central-1.amazonaws.com/diploma-auth-service:prod.latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Amazon ECR Login
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Push image
        run: docker push 533267200006.dkr.ecr.eu-central-1.amazonaws.com/diploma-auth-service:prod.latest
