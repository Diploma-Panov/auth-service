services:
  auth-postgres:
    container_name: auth-postgres
    image: postgres:16.8-alpine3.20
    environment:
      POSTGRES_USER: 'ci-user'
      POSTGRES_PASSWORD: 'qwerty'
    ports:
      - '5432:5432'

  auth-redis:
    container_name: auth-redis
    image: redis:8.0-rc1-alpine
    ports:
      - '6379:6379'

  auth-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: auth-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  auth-kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: auth-kafka
    depends_on:
      - auth-zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: auth-zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://auth-kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNA

#  auth-service:
#    container_name: auth-service
#    build:
#      context: ../..
#      dockerfile: ./docker/ecs/Dockerfile
#      args:
#        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
#        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
#        - AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
#        - spring.kafka.bootstrap-servers=auth-kafka:9092
#    environment:
#      SPRING_PROFILES_ACTIVE: 'ci'
#    ports:
#      - '8181:8181'
#    depends_on:
#      - auth-postgres
#      - auth-redis
#      - auth-kafka